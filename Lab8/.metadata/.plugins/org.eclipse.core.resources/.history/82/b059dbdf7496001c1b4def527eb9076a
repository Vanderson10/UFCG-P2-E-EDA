package Lab8;

import java.util.NoSuchElementException;
import java.util.Scanner;

class LinkedList {
	
	private Node head;
    private Node tail;
    private int size;
    
    public LinkedList() {
        this.head = null;
        this.tail = null;
        this.size = 0;
    }
    
    public boolean isEmpty() {
        return this.head == null;
    }
    
    public void addLast(int num) {
        Node newNode = new Node(num);
            
        if(isEmpty()) {
            this.head = newNode;
            this.tail = newNode;
        } else {
            this.tail.next = newNode;
            newNode.prev = tail;
            this.tail = newNode;
        }

        this.size += 1;
    }
    
    public int get(int index) {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException();
            
        Node aux = this.head;
            
        for (int i = 0; i < index; i++)
            aux = aux.next;
            
        return aux.num;
    }
    
    public void trocaVizinhoIndex(int index) {
    	boolean prox = false;
    	Node aux = this.head;
        int i = 0;
        while (aux != null) { 
            if(i==index) {
            	aux.next = aux.next.next;
            	aux.prev = aux.next;
            	prox = true;
            } else if (i==index+1){
            	aux.next = aux.prev;
            	aux.prev = aux.next;
            }
            if (prox==false) {
            	aux = aux.next;
            } else {
            	aux = aux.prev;
            	prox = false;
            }
            
            index += 1;
        }
   }
    
    public int getSize() {
    	return this.size;
    }
    
    public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		String[] elementos = sc.nextLine().split(" ");
		LinkedList linked = new LinkedList();
		for(int n = 0; n < elementos.length; n++) {
    		linked.addLast(Integer.parseInt(elementos[n]));
    	}
		int index = sc.nextInt();
		for (int i=0; i<linked.getSize();i++) {
			System.out.println(linked.get(i));
		}
	}

}





