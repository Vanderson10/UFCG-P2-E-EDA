package Lab8;

import java.util.NoSuchElementException;
import java.util.Scanner;

class Teste{
	
	class Node {
		
	     int num;
	    Node next;
	    Node prev;
	    
	    public Node(int num) {
	        this.num = num;
	        this.prev = null;
	        this.next = null;
	    }   

	}

	class LinkedList {
		
		private Node head;
	    private Node tail;
	    private int size;
	    
	    public LinkedList() {
	        this.head = null;
	        this.tail = null;
	        this.size = 0;
	    }
	    
	    public boolean isEmpty() {
	        return this.head == null;
	    }
	    
	    public void addLast(int num) {
	        Node newNode = new Node(num);
	            
	        if(isEmpty()) {
	            this.head = newNode;
	            this.tail = newNode;
	        } else {
	            this.tail.next = newNode;
	            newNode.prev = tail;
	            this.tail = newNode;
	        }

	        this.size += 1;
	    }
	    
	    public int get(int index) {
	        if (index < 0 || index >= size)
	            throw new IndexOutOfBoundsException();
	            
	        Node aux = this.head;
	            
	        for (int i = 0; i < index; i++)
	            aux = aux.next;
	            
	        return aux.num;
	    }
	    
	    public void trocaVizinhoIndex(int index) {
	    	boolean prox = false;
	    	Node aux = this.head;
	        int i = 0;
	        while (aux != null) { 
	            if(i==index) {
	            	aux.next = aux.next.next;
	            	aux.prev = aux.next;
	            	prox = true;
	            } else if (i==index+1){
	            	aux.prev = aux.prev.prev;
	            }
	            if (prox==false) {
	            	aux = aux.next;
	            } else {
	            	aux = aux.prev;
	            	prox = false;
	            }
	            index += 1;
	        }
	   }
	    
	    public int getSize() {
	    	return this.size;
	    }
	    
	    public int removeFirst() {
	        
	        if (isEmpty()) throw new NoSuchElementException();
	            
	        int num = this.head.num;
	            
	        if (this.head.next == null) {
	            this.head = null;
	            this.tail = null;
	        } else {
	            this.head = this.head.next;
	            this.head.prev = null;
	        }
	            
	        size -= 1;
	        return num;
	    }
	        
	    public int removeLast() {
	            
	        if (isEmpty()) throw new NoSuchElementException();
	            
	        int num = this.tail.num;
	        
	        if (this.head.next == null) {
	            this.head = null;
	            this.tail = null;
	        } else {
	            this.tail = this.tail.prev;
	            this.tail.next = null;
	        }           
	        
	        size -= 1;
	        return num;

	    }
	    
	    public int remove(int index) {
	        if (index < 0 || index >= size)
	            throw new IndexOutOfBoundsException();
	        
	        if (index == 0) return removeFirst();
	        if (index == size - 1) return removeLast();
	        
	        Node aux = this.head;
	        for (int i = 0; i < index; i++)
	            aux = aux.next;
	        
	        aux.prev.next = aux.next;
	        aux.next.prev = aux.prev;
	                       size -= 1;       
	        return aux.num;
	    }
	    
	    public static void main(String[] args){
			Scanner sc = new Scanner(System.in);
			String[] elementos = sc.nextLine().split(" ");
			LinkedList linked = new LinkedList();
			for(int n = 0; n < elementos.length; n++) {
	    		linked.addLast(Integer.parseInt(elementos[n]));
	    	}
			int index = sc.nextInt();
			linked.remove(index);
			String saida = "";
			for (int i=0; i<linked.getSize();i++) {
				saida+=linked.get(i)+" ";
			}
			System.out.println(saida.trim());
		}
	}
	
}
